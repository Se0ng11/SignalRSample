@{
    ViewBag.Title = "Instant Database Changes Using SignalR Demo";
}

<div class="row">
    @*<h1 style="color: green">Instant Database Changes Using SignalR</h1>*@
    <div class="col-md-12">
        @*<div id="divStudent"></div>*@

        <div id="divLine"></div>

    </div>
</div>
@section Scripts{
    <script src="@Url.Content("~/Scripts/jquery.signalR-2.2.2.js")"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="@Url.Content("~/signalr/hubs")"></script>
    <script type="text/javascript">
        var isBlink = false;

        $(function () {
            // Create a proxy to signalr hub on web server. It reference the hub.
            isBlink = false;
            GenerateTimeAndLine();
            var notifications = $.connection.dataResultHub;

            // Notify to client with the recent updates from hub that broadcast messages.
            notifications.client.updateDataResultInformation = function (serverResponse) {
                //alert('changes triggered by ' + serverResponse + ' operation');
                isBlink = true;
                getDataResultInformation();

            };

            // Connect to signalr hub
            $.connection.hub.start().done(function () {
                getDataResultInformation();
            }).fail(function (error) {
                alert(error);
            });
        });


        function getDataResultInformation() {
            //var model = $('#divStudent');
            $.ajax({
                url: '@Url.Content("~/home/SendPQINotification")',
                contentType: 'application/html ; charset:utf-8',
                type: 'GET',
                dataType: 'html'
            }).success(function (result) {
                var pResult = JSON.parse(result);
                if (pResult.length === 0) {
                    GenerateTimeAndLine();
                }
                else
                {
                    GenerateBlinkAndColor(pResult);
                }
            }).error(function () {

            });
        }

        function GenerateTimeAndLine() {
            $('#divLine').empty();
            var time = 24;
            var plant = 5;
            var line = 12;
            var th = table = row = "";
            var c = 0;
            var pad = "00";

            for (var i = 0; i < time; i++) {
                th += "<th>" + ('0' + i).slice(-2) + "</th>";
            }

            for (var j = 0; j < plant; j++)
            {
                var p = ('P' + (j+1)).slice(-2);

                for (var k = 0; k < line; k++) {
                    var l = "L" + (pad + (c + 1)).slice(-pad.length);
                    var aR = "";

                    for (var z = 0; z < time; z++) {
                        var x = ('0' + z).slice(-2);
                        var uI = (p + l + x);

                        if (z === 6 || z === 14 || z === 22) {
                            aR += "<td class=\"green rightline\" id=\"" + uI + "\"></td>";
                        }
                        else {
                            aR += "<td class=\"green\"  id=\"" + uI + "\"></td>";
                        }
         
                    }

                    if (k === (line - 1))
                    {
                        row += "<tr class=\"underline\"><td>" + p + "</td><td>" + l + "</td>" + aR + "</tr>";
                    }
                    else {
                        row += "<tr><td>" + p + "</td><td>" + l + "</td>" + aR + "</tr>";
                    }

                    c += 1;
                }
            }

            table = "<table class=\"table table-bordered table-condensed\"><thead><tr><th></th><th></th>" + th + "</tr></thead><tbody>" + row + "</tbody></table>";

            $('#divLine').append(table);
        }


        function GenerateBlinkAndColor(result) {
            var $table = $('table');
            console.log(result);
            $(result).each(function (i, x) {
                var $td = $table.find('tbody tr td[id="' + x.Id + '"]');
                var $pC = $td.attr('class');
                var $nC = x.Status;

                if (isBlink) {
                    if ($pC !== $nC) {
                        //blink here
                        PutHereToBlink($td, $pC, $nC);
                    }
                    else {
                        //direct color  
                        $td.removeClass($pC).addClass($nC);
                    }
                }
                else {
                    $td.removeClass($pC).addClass($nC);
                }
              

                $td.text(x.Message);
            });
        }

        //function ColorToRGB(newColor) {
            
        //    switch (newColor) {
        //        case "black":
        //            newColor = "rgb(0, 0, 0)";
        //            break;
        //        case "yellow":
        //            newColor = "rgb(255, 255, 0)";
        //            break;
        //        case "blueviolet":
        //            newColor = "rgb(138,43,226)";
        //            break;
        //        case "lightblue":
        //            newColor = "rgb(173,216,230)";
        //            break;
        //        case "red":
        //            newColor = "rgb(255,0,0)";
        //            break;
        //        default:
        //            newColor = "rgb(0, 128, 0)";
        //    }
        //    return newColor;
        //}

        function PutHereToBlink(element, prevColor, newColor) {

            var count = 0;
            var blink = setInterval(function () {
                element.toggleClass("" + prevColor + "" + " " + newColor + "");
                count += 1;
                if (count === 10) {
                    element.removeClass(prevColor).addClass(newColor);
                    window.clearInterval(blink);

                }
            }, 1000);


        }
    </script>
}